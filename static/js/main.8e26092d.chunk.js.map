{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactListItem/ContactListItem.module.css","components/App.module.css","components/filter/Filter.module.css","components/contactsList/ContactList.module.css","components/contactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactsList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","maxId","state","id","name","number","handlerChangeInput","e","setState","target","value","handlerSubmitForm","props","onItemAdded","preventDefault","reset","this","className","styles","containerForm","phoneForm","onSubmit","phoneHeader","inputForm","onChange","type","required","pattern","placeholder","s","buttonForm","Component","ContactListItem","contact","onDeleted","item","onClick","ContactList","contacts","onItemDeleted","contactList","map","key","Filter","onChangeFilterContact","filter","inputFilter","toBeAddedContact","find","includes","App","addContact","newContactData","contactToAdd","alert","deleteContact","changeFilterContact","savedContactsInLocalStorage","localStorage","getItem","JSON","parse","prevProps","prevState","console","log","setItem","stringify","filteredContacts","filterValue","toLowerCase","filterContacts","headerPhone","length","allContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e26092d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ContactForm_containerForm__2O5sr\",\"inputForm\":\"ContactForm_inputForm__3LDCN\",\"buttonForm\":\"ContactForm_buttonForm__sFkpn\",\"phoneHeader\":\"ContactForm_phoneHeader__2Yy_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__3maI8\",\"number\":\"ContactListItem_number__1SUGv\",\"buttonForm\":\"ContactListItem_buttonForm__zr7Z9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPhone\":\"App_headerPhone__24vGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1__jF\",\"inputFilter\":\"Filter_inputFilter__30E-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__23LjC\"};","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n// import shortid from 'shortid';\n\nexport default class ContactForm extends Component {\n  // newContactId = shortid.generate();\n  maxId = 100;\n\n  state = {\n    id: \"\",\n    name: \"\",\n    number: \"\"\n  };\n\n  handlerChangeInput = e => {\n    // console.log(\"name\", e.target.name);\n    // console.log(\"value\", e.target.value);\n    this.setState({\n      id: this.maxId++,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handlerSubmitForm = e => {\n    this.props.onItemAdded({ ...this.state });\n    e.preventDefault();\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      number: \"\"\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={styles.containerForm}>\n        <form className={styles.phoneForm} onSubmit={this.handlerSubmitForm}>\n          <label className={styles.phoneHeader}>\n            Name\n            <input\n              className={styles.inputForm}\n              onChange={this.handlerChangeInput}\n              type=\"text\"\n              required\n              pattern=\"^[A-Za-zА-Яа-яЁё\\s]+$\"\n              name=\"name\"\n              placeholder=\"Please, enter Contact's Name and Last Name\"\n              value={name}\n            ></input>\n          </label>\n          <label className={styles.phoneHeader}> Number </label>\n          <input\n            className={styles.inputForm}\n            onChange={this.handlerChangeInput}\n            type=\"text\"\n            name=\"number\"\n            s\n            placeholder=\"xxx-xxx\"\n            required\n            pattern=\"[0-9]{3}-[0-9]{3}\"\n            value={number}\n          ></input>\n          <button className={styles.buttonForm} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string\n};\n","import React from \"react\";\nimport styles from \"./ContactListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ contact, onDeleted }) => {\n  const { name, number } = contact;\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.number}>{number}</p>\n      <button className={styles.buttonForm} type=\"click\" onClick={onDeleted}>\n        x\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object,\n  onDeleted: PropTypes.func\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\nimport ContactListItem from \"../contactListItem/ContactListItem\";\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onItemDeleted }) => (\n  <ul className={styles.contactList}>\n    {contacts.map(contact => (\n      <ContactListItem\n        contact={contact}\n        key={contact.id}\n        onDeleted={() => onItemDeleted(contact.id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onItemDeleted: PropTypes.func\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from 'prop-types';\n\n\nconst Filter = ({value, onChangeFilterContact}) => {\n  return (\n    <label className={styles.filter}>\n      Find contact by name\n      <input className={styles.inputFilter} value={value} onChange={onChangeFilterContact}></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilterContact: PropTypes.func\n};\n\nexport default Filter;","import React, { Component } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport styles from \"./App.module.css\";\nimport ContactList from \"./contactsList/ContactList\";\nimport Filter from \"./filter/Filter\";\n\nconst filterContacts = (contacts, filterValue) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n};\n\nconst toBeAddedContact = (contacts, name, number) => {\n  return contacts.find(\n    contact => contact.name.includes(name) && contact.number.includes(number)\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    // console.log(\"prevState: \", prevState);\n    // console.log(\"this.state: \", this.state);\n    const savedContactsInLocalStorage = localStorage.getItem(\"contacts\");\n\n    if (savedContactsInLocalStorage) {\n      this.setState({ contacts: JSON.parse(savedContactsInLocalStorage) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevState: \", prevState);\n    console.log(\"this.state: \", this.state);\n\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = newContactData => {\n    const contactToAdd = {\n      ...newContactData\n    };\n\n    if (\n      !toBeAddedContact(\n        this.state.contacts,\n        contactToAdd.name,\n        contactToAdd.number\n      )\n    ) {\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd]\n      }));\n    } else {\n      alert(\"NOOOOOOOOOOO!!!!!\");\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id)\n    }));\n  };\n\n  changeFilterContact = e => {\n    this.setState({ filter: e.target.value });\n    // console.log(e.target.value);\n  };\n\n  //обновление элемента!!!!!\n  // updateCompleted = (id) => {\n  //   this.setState(state => ({\n  //     contacts: state.contacts.map(contact => {\n  //       return contact.id === id ? {...contact, comleted: !contact.completed} : contact})}))\n  // }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <div>\n        <h1 className={styles.headerPhone}>Phonebook</h1>\n        <ContactForm onItemAdded={this.addContact} />\n\n        <h2 className={styles.headerPhone}>Contacts</h2>\n        {contacts.length >= 2 && (\n          <Filter\n            value={filter}\n            onChangeFilterContact={this.changeFilterContact}\n            allContacts={contacts}\n          />\n        )}\n        <ContactList\n          contacts={filteredContacts}\n          onItemDeleted={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}